{"version":3,"sources":["components/TodoList/TodoList.jsx","utils/request.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","status","changeQuery","event","setState","target","value","setStatus","selectStatus","todo","completed","this","props","todos","selectUser","selectedUserId","filteredTodos","filter","title","toLowerCase","includes","className","type","name","placeholder","onChange","map","itemClass","classNames","key","id","defaultChecked","onClick","userId","React","Component","request","url","fetch","then","response","ok","Error","statusText","json","serverResponse","data","CurrentUser","user","loadCurrentUser","prevProps","resetUser","email","phone","role","App","showUserDetails","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ea4fea8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    status: 'all',\n  }\n\n  changeQuery = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  setStatus = (event) => {\n    this.setState({ status: event.target.value });\n  }\n\n  selectStatus = (todo) => {\n    switch (this.state.status) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default: return 0;\n    }\n  }\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n    const { query } = this.state;\n\n    const filteredTodos = todos\n      .filter(todo => todo.title && todo.title.toLowerCase()\n        .includes(query.toLowerCase()))\n      // eslint-disable-next-line no-shadow\n      .filter((todo) => {\n        switch (this.state.status) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default: return todo;\n        }\n      });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <form>\n          <label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"text\"\n              placeholder=\"Search for todo\"\n              value={query}\n              onChange={this.changeQuery}\n            />\n          </label>\n\n          <select\n            className=\"custom-checkbox\"\n            name=\"status\"\n            onChange={this.setStatus}\n          >\n            <option value=\"all\">Show all todos</option>\n            <option value=\"active\">Show active todos</option>\n            <option value=\"completed\">Show completed todos</option>\n          </select>\n        </form>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map((todo) => {\n              const itemClass = classNames('TodoList__item', {\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              });\n\n              return (\n                <li className={itemClass} key={todo.id}>\n                  <label>\n                    <input type=\"checkbox\" defaultChecked={todo.completed} />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    type=\"button\"\n                    className={classNames('TodoList__user-button', 'button',\n                      { 'TodoList__user-button--selected':\n                        todo.id === selectedUserId })}\n                    onClick={() => {\n                      selectUser(todo.userId);\n                    }}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(serverResponse => serverResponse.data || serverResponse);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from '../../utils/request';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadCurrentUser();\n    }\n  }\n\n  loadCurrentUser() {\n    request(`/users/${this.props.userId}`).then((user) => {\n      this.setState({\n        user,\n      });\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { resetUser } = this.props;\n\n    if (!user) {\n      return (\n        <>\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\" />\n          </div>\n          <p>User details are loading...</p>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        {user && (\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user:\n            ${user.id}`}\n          </span>\n        </h2>\n        )}\n\n        {user && (\n        <div>\n          <h3 className=\"CurrentUser__name\">\n            {user.name}\n          </h3>\n          <p className=\"CurrentUser__email\">\n            {user.email}\n          </p>\n          <p className=\"CurrentUser__phone\">\n            {user.phone}\n          </p>\n          <button\n            type=\"button\"\n            className=\"button CurrentUser__clear\"\n            onClick={resetUser}\n          >\n            Clear\n          </button>\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  resetUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './utils/request';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    request('/todos').then((todos) => {\n      this.setState({\n        todos,\n      });\n    });\n  }\n\n  showUserDetails = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  resetUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length === 0 ? (\n            <>\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\" />\n              </div>\n              <p>Todos are loading...</p>\n            </>\n          ) : (\n            <TodoList\n              todos={todos}\n              selectUser={this.showUserDetails}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} resetUser={this.resetUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}